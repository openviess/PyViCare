name: Lint

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
env:
  DEFAULT_PYTHON: "3.11"
jobs:
  codespell:
    name: codespell
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Check code for common misspellings
        run: poetry run codespell **/*.py

  ruff:
    name: ruff
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run ruff linter
        run: poetry run ruff check --output-format=github .
    #   - name: 🚀 Run ruff formatter
    #     run: poetry run ruff format --check .

  pylint:
    name: pylint
    runs-on: ubuntu-latest
    steps:
      - name: ⤵️ Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: 🏗 Set up Poetry
        run: pipx install poetry
      - name: 🏗 Set up Python ${{ env.DEFAULT_PYTHON }}
        id: python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
          cache: "poetry"
      - name: 🏗 Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
      - name: 🏗 Install Python dependencies
        run: poetry install --no-interaction
      - name: 🚀 Run pylint
        run: poetry run pylint **/*.py
