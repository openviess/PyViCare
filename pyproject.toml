[project]
name = "PyViCare"
version = "0.1.0"
description = "Library to communicate with the Viessmann ViCare API."
authors = [{ name = "Simon Gillet", email = "mail+pyvicare@gillet.ninja" }]
requires-python = "~=3.9"
readme = "README.md"
license = "Apache-2.0"
maintainers = [
    { name = "Christopher Fenner", email = "fenner.christopher@gmail.com" },
    { name = "Martin" },
    { name = "Lukas WÃ¶hrl" },
]
keywords = [
    "viessmann",
    "vicare",
    "api",
]
classifiers = [
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
dependencies = [
    "authlib>1.2.0",
    "requests>=2.31.0",
    "deprecated>=1.2.15,<2",
]

[project.urls]
Homepage = "https://github.com/openviess/PyViCare"
Repository = "https://github.com/openviess/PyViCare"
Documentation = "https://github.com/openviess/PyViCare"
"Bug Tracker" = "https://github.com/openviess/PyViCare/issues"
Changelog = "https://github.com/openviess/PyViCare/releases"

[dependency-groups]
dev = [
    "codespell>=2.3.0,<3",
    "mypy>=1.11.2,<2",
    "pylint>=3.2.6,<4",
    "pytest>=8.3.2,<9",
    "pytest-cov>=7.0.0,<8",
    "ruff>=0.14.0,<0.15",
    "types-deprecated>=1.2.15.20241117,<2",
    "types-requests>=2.31",
]

[tool.hatch.build.targets.sdist]
include = ["./PyViCare"]

[tool.hatch.build.targets.wheel]
include = ["./PyViCare"]

[tool.hatch.build.targets.wheel.sources]
"./PyViCare" = "PyViCare"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "authlib.*"
ignore_missing_imports = true

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "duplicate-code",
    "fixme",
    "line-too-long",
    "invalid-name",
    "too-many-public-methods",
    "too-few-public-methods",
    # FIXME:
    "arguments-differ",
    "attribute-defined-outside-init",
    "bad-classmethod-argument",
    "chained-comparison",
    "consider-merging-isinstance",
    "consider-using-dict-items",
    "consider-using-generator",
    "deprecated-decorator",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-timeout",
    "raise-missing-from",
    "unspecified-encoding",
    "useless-object-inheritance",
    "useless-parent-delegation",
]
